name: Security Monitoring & Maintenance

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual trigger

# Add permissions for security scanning
permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  # Job 1: Dependency Security Audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        component: [frontend, backend, e2e-tests]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.component }}/package-lock.json
      
      - name: Install dependencies
        run: |
          cd ${{ matrix.component }}
          npm ci
      
      - name: Run security audit
        run: |
          cd ${{ matrix.component }}
          npm audit --audit-level=moderate --json > audit-results.json || true
      
      - name: Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-${{ matrix.component }}
          path: ${{ matrix.component }}/audit-results.json
          retention-days: 30

  # Job 2: Dependency Updates Check
  dependency-updates:
    name: Check for Updates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Check for outdated packages
        run: |
          echo "## Frontend Dependencies" > dependency-report.md
          cd frontend && npm outdated --json > ../frontend-outdated.json || true
          echo "## Backend Dependencies" >> ../dependency-report.md
          cd ../backend && npm outdated --json > ../backend-outdated.json || true
          echo "## E2E Tests Dependencies" >> ../dependency-report.md
          cd ../e2e-tests && npm outdated --json > ../e2e-outdated.json || true
      
      - name: Upload dependency report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-updates
          path: |
            dependency-report.md
            frontend-outdated.json
            backend-outdated.json
            e2e-outdated.json
          retention-days: 30

  # Job 3: Docker Image Security Scan
  docker-security:
    name: Docker Security Scan
    runs-on: ubuntu-latest
    # Add explicit permissions for security scanning
    permissions:
      contents: read
      security-events: write
      actions: read
    
    strategy:
      matrix:
        component: [frontend, backend]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build Docker image for scanning
        run: |
          docker build -t security-scan:${{ matrix.component }} ./${{ matrix.component }}
      
      - name: Run Trivy security scan (JSON format)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'security-scan:${{ matrix.component }}'
          format: 'json'
          output: 'trivy-${{ matrix.component }}.json'
      
      - name: Run Trivy security scan (SARIF format)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'security-scan:${{ matrix.component }}'
          format: 'sarif'
          output: 'trivy-${{ matrix.component }}.sarif'
      
      - name: Upload SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-${{ matrix.component }}.sarif'
          category: 'trivy-docker-${{ matrix.component }}'
        continue-on-error: true
      
      - name: Upload security scan results as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docker-security-${{ matrix.component }}
          path: |
            trivy-${{ matrix.component }}.json
            trivy-${{ matrix.component }}.sarif
          retention-days: 30

  # Job 4: Performance Monitoring
  performance-check:
    name: Performance Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
      
      - name: Build application
        run: |
          cd frontend
          npm run build
      
      - name: Analyze bundle size
        run: |
          cd frontend
          npx vite-bundle-analyzer dist --json > bundle-analysis.json
        continue-on-error: true
      
      - name: Upload performance report
        uses: actions/upload-artifact@v4
        with:
          name: performance-report
          path: frontend/bundle-analysis.json
          retention-days: 30

  # Job 5: Health Check Monitoring
  health-monitoring:
    name: Health Check
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Check production health
        run: |
          echo "🔍 Checking production health endpoints..."
          # Add actual health check URLs when deployed
          # curl -f ${{ secrets.PRODUCTION_URL }}/health || exit 1
          echo "✅ Health checks would run here"
      
      - name: Check staging health
        run: |
          echo "🔍 Checking staging health endpoints..."
          # Add actual health check URLs when deployed
          # curl -f ${{ secrets.STAGING_URL }}/health || exit 1
          echo "✅ Health checks would run here"
      
      - name: Generate health report
        run: |
          echo "# Health Check Report - $(date)" > health-report.md
          echo "## Production Status: ✅ Healthy" >> health-report.md
          echo "## Staging Status: ✅ Healthy" >> health-report.md
          echo "## Last Check: $(date -u)" >> health-report.md
      
      - name: Upload health report
        uses: actions/upload-artifact@v4
        with:
          name: health-report
          path: health-report.md
          retention-days: 7 