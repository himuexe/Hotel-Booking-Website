services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://api.yourdomain.com}
      - VITE_STRIPE_PUB_KEY=${VITE_STRIPE_PUB_KEY}
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "7000:7000"
    environment:
      - NODE_ENV=production
      - MONGODB_CONNECTION_STRING=${MONGODB_CONNECTION_STRING}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - FRONTEND_URL=${FRONTEND_URL}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - STRIPE_API_KEY=${STRIPE_API_KEY}
    depends_on:
      - mongodb
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=vacays
    networks:
      - app-network
    command: ["--auth", "--bind_ip_all"]

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data: 